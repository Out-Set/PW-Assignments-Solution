1.List the Operations in Java?
==============================
Answer:
	1.Arithmetic operator
	2.Relational operator
	3.Logical operator
	4.Assignment operator
	5.Unary operator
	6.Bitwise operator


2.Explain about Increment and Decrement operators and give an example?
======================================================================
Answer: 
Pre-increment/decrement --> First increment/decrement then perform operations.
Post-increment/decrement --> First perform operations then increment/decrement.

Increment -> Pre-Increment and Post-Increment
             (++a: a=a+1)       (a++: a=a+1)
Decrement -> Pre-Decrement and Post-Decrement
              (--a: a=a-1)      (a--: a=a-1)



3.What are the Conditional Operations in Java?
==============================================
Answer: 
1.Ternary Operator (? :):
-------------------------
The ternary operator is a very concise way to express a conditional statement.
Syntax: condition ? expression_if_true : expression_if_false
	Example:
	int x = 10;
	int y = 20;
	int result = (x > y) ? x : y;


Logical AND (&&):
-----------------
The logical AND operator returns true if both operands are true, otherwise, it returns false.
Syntax:
	if (condition1 && condition2) {
    		// Code will be executed, if both conditions are true
	}


Logical OR (||):
----------------
The logical OR operator returns true if at least one of the operands is true.
Syntax:
	if (condition1 || condition2) {
    		// Code will be executed, if at least one condition is true
	}


Logical NOT (!):
----------------
The logical NOT operator is a unary operator that negates the value of its operand. If the operand is true, ! makes it false, and vice versa.
Syntax:
	if (!condition) {
    		// Code will be executed, if the condition is false
	}



4.What are the types of operators based on the number of operands?
==================================================================
Answer: 
i).Unary Operators: Unary operators act on only one operand.
	Unary plus (+)
	Unary minus (-)
	Increment (++)
	Decrement (--)
	Logical NOT (!)
	Bitwise NOT (~)
	
ii).Binary Operators:Binary operators act on two operands.
	Arithmetic operators (e.g., +, -, *, /, %)
	Relational operators (e.g., ==, !=, <, >, <=, >=)
	Logical operators (e.g., &&, ||)
	Assignment operators (e.g., =, +=, -=, *=, /=, %=)
	Bitwise operators (e.g., &, |, ^, <<, >>, >>>)
	
iii).Ternary Operator:The ternary operator is a special operator that takes three operands.


5.What are the Conditional Statements and use of Conditional Statements in Java?
================================================================================
Answer: Conditional statements are used to control the flow of a program based on certain conditions. 
	They allows to execute different code blocks depending on whether a specified condition evaluates to true or false.
	
Different Conditional Statements are as ...
i). if
------
syntax:
	if (condition) {
    		// Code will be executed, if the condition is true
	}

ii). if-else
------------
syntax:
	if (condition) {
    		// Code will be executed, if the condition is true
	} else {
    		// Code will be executed, if the condition is false
	}


iii). nested if-else
---------------------
syntax:
	if (condition1) {
    		// Code will be executed, if condition1 is true
    		
	} else if (condition2) {
    		// Code will be executed, if condition2 is true
    		
    	} else if (condition2) {
    		// Code will be executed, if condition2 is true
    		
	} else {
    		// Code will be executed, if no condition is true
	}

iv). switch(case)
-----------------
syntax:
	switch (expression) {
	
    		case value1:
        		// Code will be executed, if expression equals value1
        		break;
        
    		case value2:
        		// Code will be executed, if expression equals value2
        		break;
        
    		// ... other cases ... if any ...
    
    		default:
        		// Code will be executed, if expression doesn't match any case
	}



6.What is the syntax of if else statement?
==========================================
Answer: 
	if(condition){
		statements...
	}
	else{
		statements...
	}
	
--> If condition is true if block codes will be executed otherwise else block codes will be executed.



7.What are three types of iterative statements in java?
=======================================================
Answer: Followings are the three types of iterative statements we have in Java.
i).while
--------
syntax- while(condition){
		statements...
	}
	
ii).do-while
-------------
syntax- do{
		statements...
	}
	while(condition)
	
iii).for
---------
syntax- for(initialization; condition; update){
		statements...
	}



8.What do you mean by an array?
===============================
Answer: -> An Arrys is a collection of similiar data type.
	-> It takes continuous space in memory.
	-> Advantage of using arrays is the ability to access elements with constant time complexity O(1), using their index.
	-> Commonly used in programming to organize and manipulate a fixed-size sequence of elements of the same type.

example:
Declaration and initialization of an integer array
int[] myArray = {1, 2, 3, 4, 5};

// Accessing elements using index
int firElement = myArray[0];  // Value: 1
int thirdElement = myArray[2];  // Value: 3


9.How to create an array?
=========================
Answer: There are 2-ways to create an array in java

1.Declaration and initialization
--------------------------------
dataType[] arrayName = new dataType[arraySize];

// Example with integers
int[] myIntArray = new int[5]; // Creates an integer array of size 5

2.Initializing with values 
--------------------------
int y[] = {1, 2, 3, 4, 5};



10.State the difference between StringBuffer and StringBuilder in Java?
=======================================================================
Answer: 
StringBuffer:-
--------------
1.It is mutable.
2.It is thread safe but performance is slow.
3.Methods are Synchronized.
4.Performance is slower.

StringBuilder:-
---------------
1.It is also mutable.
2.It is not thread safe.
3.Methods are not Synchronized.
4.Performance is fast.


